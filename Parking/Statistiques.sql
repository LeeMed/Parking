-- moyenne du nombre de places disponibles par parking
select NOM_PARKING, AVG(PLACE_DISPO)
from(select NOM_PARKING,CONVERT(S.DATE_STATIONNEMENT_E,DATE),CAPACITE - COUNT(*) AS PLACE_DISPO
     from STATIONNEMENT S inner join PARKING P on P.ID_PARKING = S.ID_PARKING
        where ( CONCAT(CONVERT(S.DATE_STATIONNEMENT_E,DATE),' 16:14:00') between S.DATE_STATIONNEMENT_E and S.DATE_STATIONNEMENT_S)
        group by NOM_PARKING,CONVERT(S.DATE_STATIONNEMENT_E,DATE)) AS T
group by NOM_PARKING;


-- la durée moyenne de stationnement d'un véhicule par parking
SELECT NUMERO_IMMATRICULATION, NOM_PARKING, AVG(DUREE_STAT) as DUREE_AVG
from(select NUMERO_IMMATRICULATION, NOM_PARKING,TIMESTAMPDIFF(HOUR,S.DATE_STATIONNEMENT_E,S.DATE_STATIONNEMENT_S) AS DUREE_STAT
    from STATIONNEMENT S inner join PARKING P on P.ID_PARKING = S.ID_PARKING) AS T
group by NUMERO_IMMATRICULATION, NOM_PARKING;


-- le cout moyen du stationnement d'un véhicule par mois
SELECT NUMERO_IMMATRICULATION, AVG(COUT_STAT) AS COUT_AVG
from (select NUMERO_IMMATRICULATION,NOM_PARKING, SUM(P.TARIF * TIMESTAMPDIFF(HOUR,S.DATE_STATIONNEMENT_E,S.DATE_STATIONNEMENT_S)) AS COUT_STAT
        from STATIONNEMENT S inner join PARKING P on P.ID_PARKING = S.ID_PARKING
        group by NUMERO_IMMATRICULATION,NOM_PARKING
        ) AS T
group by NUMERO_IMMATRICULATION;


-- classement des parking les moins utilisés
SELECT S.ID_PARKING, NOM_PARKING, COUNT(*)
from STATIONNEMENT S inner join PARKING P on P.ID_PARKING = S.ID_PARKING
group by S.ID_PARKING, NOM_PARKING
order by COUNT(*) desc;

-- classement des parking les plus rentables par commune et par mois
SELECT NOM_PARKING, NOM_DE_COMMUNE, SUM(COUT_STAT) AS cout_stationnement
from (select NUMERO_IMMATRICULATION,NOM_PARKING, NOM_DE_COMMUNE, SUM(P.TARIF * TIMESTAMPDIFF(HOUR,S.DATE_STATIONNEMENT_E,S.DATE_STATIONNEMENT_S)) AS "COUT_STAT" 
        from STATIONNEMENT S inner join PARKING P on P.ID_PARKING = S.ID_PARKING inner join COMMUNE C on C.CODE_POSTALE = P.CODE_POSTALE
        group by NUMERO_IMMATRICULATION,NOM_PARKING
        ) AS T
group by NOM_PARKING, NOM_DE_COMMUNE
having NOM_DE_COMMUNE = "Pessac"
order by SUM(COUT_STAT) desc;

-- classement des communes les plus demandés par semaine
SELECT C.CODE_POSTALE, COUNT(*)
from STATIONNEMENT S inner join PARKING P on P.ID_PARKING = S.ID_PARKING inner join COMMUNE C on C.CODE_POSTALE = P.CODE_POSTALE
where S.DATE_STATIONNEMENT_E between '2022-11-23 16:14:0' and '2022-11-30 16:14:0'
group by C.CODE_POSTALE
order by COUNT(*) desc;